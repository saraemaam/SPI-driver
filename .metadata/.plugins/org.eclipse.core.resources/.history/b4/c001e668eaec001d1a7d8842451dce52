/****************************************************************
 *
 * Module: SPI
 *
 * File Name: spi.h
 *
 * Description: Header File for AVR SPI driver
 *
 * Author: Sarah
 ******************************************************************/

#ifndef SPI_H_
#define SPI_H_

#include "std_types.h"


/*******************************************************************************
 *                                Definitions                                  *
 *******************************************************************************/
/*
 * Default SPI data value used in case we need to receive a byte from the other device,
 * without need to send a data to it
 */
#define SPI_DEFAULT_DATA_VALUE 0xFF

/******** Configure SPI Slave Pins *********
 * SS(PB4)   --> Input
 * MOSI(PB5) --> Input
 * MISO(PB6) --> Output
 * SCK(PB7) --> Input
 ********************************************/
#define SPI_CONNECTION_PORT    PORTB_ID

#define SPI_SLAVE_SELECT_PIN   PIN4_ID
#define SPI_MOSI_PIN           PIN5_ID
#define SPI_MISO_PIN           PIN6_ID
#define SPI_SCK_PIN            PIN7_ID


/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description:
 *  Initialize the SPI device as Master.
 */
void SPI_initMaster(void);

/*
 * Description :
 * Initialize the SPI device as Slave.
 */
void SPI_initSlave(void);

/*
 * Description:
 * Send the required data through SPI to the other SPI device.
 * at the same time data will be received from the other device.
 */

uint8 SPI_sendReceiveByte(uint8 data);

/*
 * Description:
 * Send the required string through SPI to the other SPI device.
 */
void SPI_sendString(const uint8 *Str);

/*
 * Description:
 * Receive the required string until
 * the '#' symbol through SPI from the other SPI device.
 */
void SPI_receiveString(uint8 *Str);




#endif /* SPI_H_ */
